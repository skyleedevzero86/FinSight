dependencies {
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-tx'
    implementation 'org.springframework:spring-web'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'jakarta.annotation:jakarta.annotation-api'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.123.Final:osx-aarch_64'
    implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-all:2.2.0'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-core'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'io.projectreactor:reactor-test'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'


}

def generated = file("src/main/generated")

sourceSets {
    main {
        java {
            srcDirs += generated
        }
    }
}

compileJava {
    options.generatedSourceOutputDirectory.set(generated)
}

clean {
    delete(generated)
}
