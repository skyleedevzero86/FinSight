spring:
  datasource:
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      validation-timeout: 5000
      initialization-fail-timeout: -1
      connection-init-sql: SET NAMES utf8mb4
      pool-name: FinSightHikariPool
      register-mbeans: true
      allow-pool-suspension: false
      auto-commit: false
      read-only: false
      transaction-isolation: TRANSACTION_READ_COMMITTED

  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: false
        show_sql: false
        default_batch_fetch_size: 100
        jdbc:
          time_zone: UTC
          batch_size: 50
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        statistics:
          enabled: true
          generate_statistics: true
        session:
          events:
            log: false

  cache:
    type: redis
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: -1ms
        shutdown-timeout: 100ms

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
      group:
        readiness:
          include: readinessState,db,redis
        liveness:
          include: livenessState
  metrics:
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: 1m
    tags:
      application: finsight
      environment: production
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99

resilience4j:
  circuitbreaker:
    instances:
      newsScrapCircuitBreaker:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 60s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - java.lang.Exception
        ignore-exceptions:
          - java.lang.IllegalArgumentException
  retry:
    instances:
      newsScrapRetry:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.lang.Exception
        ignore-exceptions:
          - java.lang.IllegalArgumentException
  timelimiter:
    instances:
      newsScrapTimeLimiter:
        timeout-duration: 30s
        cancel-running-future: true
  bulkhead:
    instances:
      newsScrapBulkhead:
        max-concurrent-calls: 20
        max-wait-duration: 5s
  ratelimiter:
    instances:
      newsScrapRateLimiter:
        limit-for-period: 100
        limit-refresh-period: 1m
        timeout-duration: 5s

logging:
  level:
    com.sleekydz86.finsight: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    com.zaxxer.hikari: INFO
    io.github.resilience4j: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 3GB

cache:
  news:
    ttl: 3600
    max-size: 10000
  user:
    ttl: 1800
    max-size: 5000

security:
  jwt:
    secret: ${JWT_SECRET}
    expiration-period: 3600000
    refresh-expiration-period: 86400000
  rate-limit:
    requests-per-minute: 100
    burst-capacity: 200
