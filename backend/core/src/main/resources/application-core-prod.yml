spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME}?useSSL=true&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=false&verifyServerCertificate=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      validation-timeout: 5000
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        show_sql: false
        default_batch_fetch_size: 100
        jdbc:
          time_zone: UTC
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region.factory_class: org.hibernate.cache.jcache.JCacheRegionFactory

  cache:
    type: redis
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
        shutdown-timeout: 100ms

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    com.sleekydz86.finsight: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.springframework.web: ${WEB_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 100MB
    max-history: 30

resilience4j:
  circuitbreaker:
    instances:
      newsScrapCircuitBreaker:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 60s
        permitted-number-of-calls-in-half-open-state: 3
        record-exceptions:
          - java.lang.Exception
          - java.lang.RuntimeException
  retry:
    instances:
      newsScrapRetry:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.lang.Exception
  timelimiter:
    instances:
      newsScrapTimeLimiter:
        timeout-duration: 30s

security:
  rate-limit:
    default-requests-per-minute: ${RATE_LIMIT_DEFAULT:60}
    admin-requests-per-minute: ${RATE_LIMIT_ADMIN:300}
    strict-requests-per-minute: ${RATE_LIMIT_STRICT:5}
  password:
    min-length: ${PASSWORD_MIN_LENGTH:16}
    require-special-chars: true
    require-numbers: true
    require-uppercase: true
    require-lowercase: true
  jwt:
    secret: ${JWT_SECRET}
    expiration-period: ${JWT_EXPIRATION:1800000}
    refresh-expiration-period: ${JWT_REFRESH_EXPIRATION:604800000}

cache:
  news:
    ttl: ${NEWS_CACHE_TTL:3600}
    max-size: ${NEWS_CACHE_MAX_SIZE:10000}

news:
  data-processing:
    normalization:
      enabled: true
      min-title-length: 10
      max-title-length: 200
      min-content-length: 50
      max-content-length: 10000
      remove-html-tags: true
      remove-control-characters: true
      remove-special-characters: false
      enable-content-hashing: true

    deduplication:
      enabled: true
      url-based: true
      title-based: true
      content-similarity: true
      similarity-threshold: 0.8
      time-based: true
      min-time-interval-minutes: 30
      enable-advanced-algorithms: true
      max-cache-size: 10000

    quality-validation:
      enabled: true
      min-quality-score: 50
      validate-urls: true
      validate-content: true
      validate-ai-analysis: true
      log-quality-issues: true

    batch-processing:
      enabled: true
      batch-size: 100
      max-concurrent-batches: 5
      timeout-seconds: 300
app:
  notification:
    enabled: true
    email:
      templates:
        news-alert: "news-alert"
        system-alert: "system-alert"
      daily-limit: 1000
      rate-limit: 100
    sms:
      max-length: 80
      daily-limit: 100
      rate-limit: 10
    push:
      fcm:
        server-key: "${FCM_SERVER_KEY:}"
        url: "https://fcm.googleapis.com/fcm/send"
    kakao:
      api-key: "${KAKAO_API_KEY:}"
      template-id: "${KAKAO_TEMPLATE_ID:}"
    slack:
      webhook-url: "${SLACK_WEBHOOK_URL:}"
    retry:
      max-attempts: 3
      delay-seconds: 60
    cleanup:
      retention-days: 30

solapi:
  api-key: "${SOLAPI_API_KEY:}"
  api-secret: "${SOLAPI_API_SECRET:}"
  base-url: "https://api.solapi.com"
  default-from-number: "${SOLAPI_FROM_NUMBER:}"

kakao:
  client-id: "${KAKAO_CLIENT_ID:}"
  redirect-uri: "${KAKAO_REDIRECT_URI:}"
  auth-url: "https://kauth.kakao.com/oauth/authorize"
  token-url: "https://kauth.kakao.com/oauth/token"
  api-url: "https://kapi.kakao.com"